{
    "swagger": "2.0",
    "info": {
        "title": "TS API",
        "license": {
            "name": "Makli's License"
        },
        "version": "1.0.0"
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "description": "Returns all brands",
                "operationId": "getBrands",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "User's token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paged array of brands",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Brands"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "description": "Creates new brand",
                "operationId": "createBrand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "User's token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brand",
                        "in": "body",
                        "description": "Brand to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Brand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The newly created brand",
                        "schema": {
                            "$ref": "#/definitions/Brand"
                        }
                    }
                }
            }
        },
        "/brands/{id}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "description": "Returns specific brand",
                "operationId": "getBrand",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "User's token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand Id to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The specific brand",
                        "schema": {
                            "$ref": "#/definitions/Brand"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "description": "Updates brand",
                "operationId": "updateBrand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "User's token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brand",
                        "in": "body",
                        "description": "Brand to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Brand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated brand",
                        "schema": {
                            "$ref": "#/definitions/Brand"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "User's token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand Id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The deleted brand",
                        "schema": {
                            "$ref": "#/definitions/Brand"
                        }
                    }
                }
            }
        },
        "/mobilephonemodels": {
            "get": {
                "tags": [
                    "MobilePhoneModel"
                ],
                "description": "Returns all mobile phone models",
                "operationId": "getMobilePhoneModels",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "An array of mobile phone models",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MobilePhoneModels"
                            }
                        }
                    }
                }
            }
        },
        "/stores": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "description": "Returns all stores",
                "operationId": "getStores",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paged array of stores",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Stores"
                            }
                        }
                    }
                }
            }
        },
        "/workorders": {
            "get": {
                "tags": [
                    "Work Orders"
                ],
                "description": "Returns all work orders",
                "operationId": "getWorkOrders",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "User's token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of work orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkOrders"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Error": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Brands": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Brand"
            }
        },
        "Stores": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Store"
            }
        },
        "WorkOrders": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/WorkOrder"
            }
        },
        "MobilePhoneModels": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/MobilePhoneModel"
            }
        },
        "Brand": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "mobile_phone_models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MobilePhoneModel"
                    }
                }
            }
        },
        "MobilePhoneModel": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Store": {
            "required": [
                "id",
                "name",
                "street",
                "street_number",
                "phone_number",
                "post_code",
                "city",
                "country",
                "latitude",
                "longitude"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "post_code": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                }
            }
        },
        "WorkOrder": {
            "required": [
                "id",
                "description",
                "notes",
                "assigned_to",
                "client_id",
                "status_id",
                "device_id",
                "store_id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "assigned_to": {
                    "type": "integer",
                    "format": "int64"
                },
                "status_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "device_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "store_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        }
    }
}